name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner & Coverlet
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore Dependencies
        run: |
          cd Animalia
          dotnet restore

      - name: Run Tests with Coverage
        run: |
          cd Animalia
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Verificar TestResults
        run: |
          cd Animalia
          ls -R TestResults || echo "No se encontr칩 la carpeta TestResults"

      - name: Buscar el archivo de cobertura
        run: |
          cd Animalia
          find . -name "coverage.cobertura.xml" || echo "No se encontr칩 el archivo de cobertura"

      - name: Mover el archivo de cobertura si est치 en un subdirectorio
        run: |
          cd Animalia
          COV_FILE=$(find TestResults -name "coverage.cobertura.xml" | head -n 1)
          if [[ -f "$COV_FILE" ]]; then
            mv "$COV_FILE" TestResults/coverage.cobertura.xml
          else
            echo "No se encontr칩 coverage.cobertura.xml"
            exit 1
          fi

      - name: Convert Coverage to Markdown
        run: |
          cd Animalia
          reportgenerator -reports:TestResults/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:MarkdownSummary

      - name: Show Coverage Report
        run: cat Animalia/coveragereport/Summary.md || echo "No coverage summary found!"

      - name: Publish Coverage to GitHub Actions Summary
        run: cat Animalia/coveragereport/Summary.md >> $GITHUB_STEP_SUMMARY

      - name: Run SonarQube Analysis
        run: |
          cd Animalia
          dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT }}" /o:"${{ secrets.SONAR_ORG }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.cobertura.xml"
          dotnet build --no-restore
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
