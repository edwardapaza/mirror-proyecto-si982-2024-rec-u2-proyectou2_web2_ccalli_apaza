name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install SonarScanner & Coverlet
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore Dependencies
        run: |
          cd Animalia
          dotnet restore

      - name: Run Tests with Coverage
        run: |
          cd Animalia
          dotnet test --collect:"XPlat Code Coverage"

      - name: Convert Coverage to XML
        run: |
          cd Animalia
          reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:Cobertura

      - name: Convert Coverage to Markdown
        run: |
          cd Animalia
          reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:MarkdownSummary

      - name: Publish Coverage to GitHub Actions Summary
        run: cat Animalia/coveragereport/Summary.md >> $GITHUB_STEP_SUMMARY

      - name: Run SonarQube Analysis
        run: |
          cd Animalia
          dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT }}" /o:"${{ secrets.SONAR_ORG }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage.cobertura.xml"
          dotnet build --no-restore
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
